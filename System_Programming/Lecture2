linux Command
mkdir <file name> => 해당 위치에 <<file name>을 가진 폴더를 만듦
pwd => 자신의 위치를 알려줌
clear => 화면의 log를 지워줌
touch <file name> => 빈 파일을 만들어줌
cat <file name> =>  
cd .. => 상위 dir로 넘어감
cp <file name1> <file name2> => 파일 이름 1을 파일 이름 2로 Copy함.
mv <file name1> <file name2> => 파일 이름을 1에서 2로 바꾸어 줌.
rm <file name> => 파일을 삭제함
whoami => root dir을 알려줌
ls *.txt => all이라는 와일드 카드를 사용하여 해당 확장자를 가진 파일들 을 보여줌.
rmdir <dir name> => dir을 지우는데 안에 있는 파일이 전부 지워져 있어야함.

---------------------------------------------------------------
vi 사용법

vi <file name> => vi 문서 편집기를 열어줌.

명령어 모드 :
1.1 초기 명령어 모드에서 "i"(insert) 명령어를 통해서 입력모드로 갈 수 있다.
1.2 초기 명령어 모드에서 "a"(append) 명령어를 통해서 입력모드로 갈 수 있다.
2 현재의 HJKL을 통해 위치를 이동할 수 있음
3.1 "w" 를 통해 한 단어씩 앞으로 이동할 수 있음 ([n]w 으로도 사용가능)
3.2 "b" 를 통해 한 단어씩 뒤으로 이동할 수 있음 ([n]b 으로도 사용가능)
4 "x"를 누르면 하나의 글자를 삭제함. ([n]x 으로도 사용가능)
5.1 "dw"를 누르면 뒤쪽으로 한단어를 삭제함. ([n]dw 으로도 사용가능)
5.2 "db"를 누르면 앞쪽으로 한단어를 삭제함. ([n]db 으로도 사용가능)
6. "dd"를 누르면 앞쪽으로 한줄을 삭제함. ([n]dd 으로도 사용가능)
7. "u" 이전 명령어 취소 (되돌리기 = Ctrl+z)
8.0 "y" 커서 범위 복사
8.1 "yw" 한 단어 복사 ([n]yw 으로도 사용가능)
8.2 "yy" 한 줄 복사 ([n]yy 으로도 사용가능)
9. "p" 한 단어/줄 붙여넣기
10. "v" 비주얼하게 커서를 보여줘서 HJKL로 커서를 확장하거나 줄일 수 있음
11. "/ + <찾고자하는 글자>" 찾고 싶은 글자를 찾아주고 "n"을 통해서 다음 걸로 넘어 갈 수 있다.
12 ":w" write Update
13 ":q" quit
13 ":s" subtitution ex) :s/kim/Lee => Kim을 Lee로 한변에 변환


입력 모드 :
1. ESC를 통해서 명령어 모드로 전환할 수 있다.

---------------------------------------------------------------------
gcc a.c => 컴파일 후 실행파일을 만듦
gcc -c a.c => 컴파일만 함/ ".o" (object 파일)을 만들게 됨.
gcc a.o => object파일로 실행파일로 만듦.(Link 작업을 함)

=> 나눠서 하는 이유 : 수정한 파일만 컴파일을 해주고 새로 수정한 것만 합쳐서 Linking을 해주면 컴파일 시간이 줄어들기 때문
=> makefile이 있는 이유 : 수정한 것만 알아서 보고 컴파일 해주기 위해서
./a.out => 실행 파일을 실행
